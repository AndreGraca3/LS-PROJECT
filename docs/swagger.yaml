swagger: '2.0'
info:
  version: 1.0.0
  title: Our Trello API
  description: This is a simple Tasks API
  # put the contact info for your development or API team
  contact:
    email: you@your-company.com

  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html

paths:
  /User:
    post:
      summary: user account creation
      operationId: signIn
      description: 
        creates a user and returns a user's identifier and a token.
      tags:
      - User
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: body
        name: name and email
        description: user's name and email.
        required: true
        schema:
          $ref: '#/definitions/newUser'
      responses:
        201:
          description: user created.
          schema:
            $ref: '#/definitions/userReturn'
        400:
          description: invalid name.
        409:
          description: user already exists. # emails has been taken.
        500:
          description: internal server error.

    get:
      summary: get details of a user
      operationId: getDetails
      description: 
        gets the details of a given user # que parametros devo receber para saber qual utilizador devo ir busca.
      tags:
      - User
      produces:
      - application/json
      responses:
        200:
          description: search results matching criteria
          schema:
            $ref: '#/definitions/newUser'
        404:
          description: user not found # user not logged.
        500:
          description: internal server error.

  /Board:
    post:
      summary: board creation
      operationId: board
      description: 
        creates a new board and returns a identifier for that board.
      tags:
      - Board
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: token
        type: string
        description: token of the correspoding user.
        required: true
      - in: body
        name: name and description
        description: board's name and description.
        required: true
        schema:
          $ref: '#/definitions/newBoard'
      responses:
        201:
          description: board created.
          schema:
            $ref: '#/definitions/boardReturn'
        400:
          description: invalid name or description.
        401:
          description: invalid token.
        409:
          description: board already exists.
        500:
          description: internal server error.
  
    put:
      summary: add a user to a board.
      operationId: AddUserBoard
      description:
        add a user to an existing board.
      tags:
      - Board
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: token
        type: string
        description: token of the correspoding user.
        required: true
      - in: query
        name: boardId
        type: integer
      - in: query
        name: userId
        type: integer
      responses:
        201:
          description: user added.
        400:
          description: invalid user or board identifier.
        401:
          description: invalid token.  
        404:
          description: board not found. # or user not found.
        500:
          description: internal server error.
  
    get:
      summary: get details from a board.
      operationId: getDetailsBoard
      description: 
        Get the detailed information of a board.
      tags:
      - Board
      produces:
      - application/json
      parameters:
      - in: header
        name: token
        type: string
        description: token of the correspoding user.
        required: true
      - in: query
        name: boardId
        type: integer
        required: true
      responses:
        200:
          description: search results matching criteria.
          schema:
            $ref: '#/definitions/newBoard'
        400:
          description: invalid board identifier.
        401:
          description: invalid token.
        404:
          description: board not found.
        500:
          description: internal server error.

  /AllBoard:
    get:
      summary: get all boards from a user.
      operationId: getBoards
      description:
        Get the list with all user available boards.
      tags:
      - Board
      produces:
      - application/json
      parameters:
      - in: header
        name: token
        type: string
        description: token of the correspoding user.
        required: true
      - in: query
        name: userId
        type: integer
        required: true
      responses:
        200:
          description: search results matching criteria.
        400:
          description: invalid user.
        401:
          description: invalid token.
        500:
          description: internal server error.
          
  /Board/List:
      put:
        summary: create a list in a board.
        operationId: createList
        description:
          Creates a new list on an existing board.
        tags:
        - List
        consumes:
        - application/json
        produces:
        - application/json
        parameters:
        - in: header
          name: token
          type: string
          description: token of the correspoding user.
          required: true
        - in: query
          name: name # name of list
          type: string
          required: true
        - in: query
          name: boardId
          type: integer
          required: true
        responses:
          201:
            description: list created.
            schema:
              $ref: '#/definitions/listReturn'
          400:
            description: invalid board identifier or name.
          401:
            description: invalid token.
          404:
            description: board not found.
          500:
            description: internal server error.
            
      get:
        summary: get details of a list.
        operationId: getDetalisList
        description:
          Get detailed information of a list.
        tags:
        - List
        produces:
        - application/json
        parameters:
        - in: header
          name: token
          type: string
          description: token of the correspoding user.
          required: true
        - in: query
          name: boardId
          type: integer
          required: true
        - in: query
          name: name # name of list
          type: string
          required: true
        responses:
          200:
            description: search results matching criteria.
            schema:
              $ref: '#/definitions/list'
          400:
            description: invalid board identifier or name.
          401:
            description: invalid token.
          404:
            description: list not found or board not found.
          500:
            description: internal server error.
          
  /Board/AllList:   
      get:
        summary: gets all list of a board.
        operationId: getLists
        description: 
          Get the lists of a board.
        tags:
        - List
        produces:
        - application/json
        parameters:
        - in: header
          name: token
          type: string
          description: token of the correspoding user.
          required: true
        - in: query
          name: boardId
          type: integer
          required: true
        responses:
          200:
            description: lists of a board.
            schema:
              $ref: '#/definitions/lists'
          400:
            description: invalid board identifier.
          401:
            description: invalid token.
          404:
            description: board not found.
          500:
            description: internal server error.
            
  /Board/List/card:
    post:
      summary: create a card in a list.
      operationId: createCard
      description:
        Creates a new card in a list.
      tags:
      - Card
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: token
        type: string
        description: token of the correspoding user.
        required: true
      - in: query
        name: boardId
        type: integer
        required: true
      - in: query
        name: listId
        type: integer
        required: true
      - in: body
        name: card
        required: true
        schema:
          $ref: '#/definitions/card'
      responses:
        201:
          description: card created.
          schema:
            $ref: '#/definitions/cardReturn'
        400:
          description: invalid name, description or listId.
        401:
          description: invalid token.
        404:
          description: list or board not found.
        500:
          description: internal server error.
          
    get:
      summary: get a card in a list.
      operationId: getCard
      description:
        Get the detailed information of a card.
      tags:
      - Card
      produces:
      - application/json
      parameters:
      - in: header
        name: token
        type: string
        description: token of the correspoding user.
        required: true
      - in: query
        name: boardId
        type: integer
        required: true
      - in: query
        name: listId
        type: integer
        required: true
      - in: query
        name: cardId
        type: integer
        required: true
      responses:
        200:
          description: search results matching criteria.
        400:
          description: invalid list or card identifier.
        401:
          description: invalid token.  
        404:
          description: board, list or card not found.
        500:
          description: internal server error.
          
    put:
      summary: update a card.
      operationId: updateCard
      description:
        Moves a card.
      tags:
      - Card
      consumes:
      - application/json
      produces:
      - application/json
      parameters:
      - in: header
        name: token
        type: string
        description: token of the correspoding user.
        required: true
      - in: query
        name: srcListId
        type: string
        required: true
      - in: query
        name: dstListId
        type: string
        required: true
      responses:
        200:
          description: updated successfully.
        400:
          description: invalid source or destination list identifier.
        401:
          description: invalid token.
        404:
          description: board, list or card not found.
        500:
          description: internal server error.
            
  /Board/List/allCards:
    get:
      summary: get all cards in a list.
      operationId: getAllCards
      description:
        Get the set of cards in a list.
      tags:
      - Card
      produces:
      - application/json
      parameters:
      - in: header
        name: token
        type: string
        description: token of the correspoding user.
        required: true
      - in: query
        name: listId
        type: integer
        required: true
      - in: query
        name: boardId
        type: integer
        required: true
      responses:
        200:
          description: search results matching criteria.
        400:
          description: invalid list or board identifier.
        401:
          description: invalid token.  
        500:
          description: internal server error.
    
        
definitions:
  newUser:
    type: object
    required:
    - name
    - email
    properties:
      name:
        type: string
        example: "Diogo"
      email:
        type: string
        example : "users123@email.com"
        
  userReturn:
    type: object
    required:
    - identifier
    - token
    properties:
      identifier:
        type: integer
        example: 1
      token:
        type: string
        example: "36b8f84d-df4e-4d49-b662-bcde71a8764f"
        
  newBoard:
    type: object
    required:
    - name
    - description
    properties:
      name:
        type: string
        example: "Project Name"
      description:
        type: string
        example: "This project consists of doing..."
  
  boardReturn:
    type: object
    required:
    - board identifier
    properties:
      board identifier:
       type: integer
       example: 1

  listReturn:
    type: object
    required:
    - list identifier
    properties:
      list identifier:
        type: integer
        example: 1
  
  list:
    type: object
    required: 
    - list name
    properties:
      list name:
        type: string
        example : "to do"

  lists:
    type: array
    items:
      type: object
      example: ["name" : "to do","name" : "doing", "name" : "done"]
      
  card:
    type: object
    required:
    - name
    - description
    properties:
      name:
        type: string
        example: "bug correction."
      description:
        type: string
        example: "There is a bug in one of our models."
      dueDate:
        type: string
        example: "11-03-2022"
    
  cardReturn:
    type: object
    required:
    - card identifier
    properties:
      card identifier:
        type: integer
        example: 1
      